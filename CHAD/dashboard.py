# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Dashboard.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtMultimedia import QMediaPlayer, QMediaPlaylist, QMediaContent
from PyQt5.QtWidgets import QFileDialog, QWidget
from PyQt5.QtCore import QUrl
import cv2
import os
from PyQt5.QtMultimediaWidgets import QVideoWidget
import sys
import csv
from ChadAI import ChadAI
import numpy as np
import random
import glob
from matplotlib import pyplot as plt

class Ui_Dashboard(object):

    def __init__(self):
        self.fileChooserBaseLocation = "TrafficDataset\\Video"
        self.currentVideoDuration = -1
        self.currentVideoPosition = -1
        self.chad = ChadAI()

        #####
        # Load the info.txt table into memory. This will be used to train the AI later and is used
        #####
        self.info = {}
        with open(r"TrafficDataset\info.txt") as info_csv:
            info_reader = csv.reader(info_csv, delimiter="\t")
            next(info_reader)
            for row in info_reader:
                self.info[row[0] + ".mp4"] = row[8]

        #####
        # Load all of the video files into an array for access
        #####
        parentDir = r"TrafficDataset\mp4video"
        self.videoFiles = []
        for file in os.listdir(parentDir):
            self.videoFiles.append(parentDir + "\\" + file)

    def setupUi(self, Dashboard):
        Dashboard.setObjectName("Dashboard")
        Dashboard.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(Dashboard)
        self.centralwidget.setObjectName("centralwidget")
        self.btnSelectVideo = QtWidgets.QPushButton(self.centralwidget)
        self.btnSelectVideo.setGeometry(QtCore.QRect(30, 480, 75, 23))
        self.btnSelectVideo.setObjectName("btnSelectVideo")
        self.btnPlayVideo = QtWidgets.QPushButton(self.centralwidget)
        self.btnPlayVideo.setGeometry(QtCore.QRect(120, 480, 31, 23))
        self.btnPlayVideo.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("playbutton.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnPlayVideo.setIcon(icon)
        self.btnPlayVideo.setObjectName("btnPlayVideo")
        self.progressBarSlider = QtWidgets.QSlider(self.centralwidget)
        self.progressBarSlider.setGeometry(QtCore.QRect(29, 520, 741, 22))
        self.progressBarSlider.setOrientation(QtCore.Qt.Horizontal)
        self.progressBarSlider.setObjectName("progressBarSlider")
        self.btnTrainCHAD = QPushButton(self.centralwidget)
        self.btnTrainCHAD.setObjectName(u"btnTrainCHAD")
        self.btnTrainCHAD.setGeometry(QRect(680, 480, 75, 23))
        self.btnTrainCHAD.setText("Train CHAD")
        self.lblClass = QLabel(self.centralwidget)
        self.lblClass.setObjectName(u"lblClass")
        self.lblClass.setGeometry(QRect(230, 10, 321, 41))
        font = QFont()
        font.setFamily(u"Montserrat SemiBold")
        font.setPointSize(24)
        font.setBold(False)
        font.setWeight(50)
        self.lblClass.setFont(font)
        self.lblClass.setAlignment(Qt.AlignCenter)
        self.lblClass.setText("CLASSIFICATION")

        # Add media player
        self.VideoPlayer = QVideoWidget(self.centralwidget)
        self.VideoPlayer.setGeometry(QtCore.QRect(80, 60, 630, 400))
        self.VideoPlayer.setObjectName("VideoPlayer")
        self.player = QMediaPlayer()
        self.playlist = QMediaPlaylist(self.player)
        self.player.setPlaylist(self.playlist)
        self.player.setVideoOutput(self.VideoPlayer)

        Dashboard.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Dashboard)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        Dashboard.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Dashboard)
        self.statusbar.setObjectName("statusbar")
        Dashboard.setStatusBar(self.statusbar)

        self.retranslateUi(Dashboard)
        QtCore.QMetaObject.connectSlotsByName(Dashboard)

        # Connect signal for play button click
        self.btnPlayVideo.clicked.connect(self.playVideo)

        # Connect signal for file select button
        self.btnSelectVideo.clicked.connect(self.selectVideoFile)

        # Connect signal for changing/updating video to progress bar updates
        self.player.durationChanged.connect(self.setProgressBarAttribs)
        self.player.positionChanged.connect(self.setProgressBarAttribs)

        # Add the default video to the playlist
        self.playlist.addMedia(QMediaContent(
            QUrl("C:/Users/mwebber/Documents/School/Capstone/TrafficDataset/video/cctv052x2004080516x01638.avi")))
        self.playlist.setCurrentIndex(0)

        # Set train button action
        self.btnTrainCHAD.clicked.connect(self.trainChad)

        # Set chad's reporting label
        self.chad.report_label = self.lblClass


    def retranslateUi(self, Dashboard):
        _translate = QtCore.QCoreApplication.translate
        Dashboard.setWindowTitle(_translate("Dashboard", "MainWindow"))
        self.btnSelectVideo.setText(_translate("Dashboard", "Select Video"))

    def playVideo(self):
        self.player.play()
        self.chad.processVideo()

    def selectVideoFile(self):
        file = QFileDialog.getOpenFileName(QWidget(), 'Open file',
                                    self.fileChooserBaseLocation, "Video files (*.avi *.mp4)")
        self.playlist.clear()
        self.chad.current_video = file[0]
        self.playlist.addMedia(QMediaContent(QUrl(file[0])))
        self.playlist.setCurrentIndex(0)

    def setProgressBarAttribs(self):
        self.currentVideoDuration = self.player.duration()
        self.currentVideoPosition = self.player.position()
        self.progressBarSlider.setRange(0, self.currentVideoDuration)
        self.progressBarSlider.setValue(self.currentVideoPosition)

    def trainChad(self):
        numGenerations = 1
        for i in range(numGenerations):
            self.chad.train(self.videoFiles, self.info)
            #self.chad = self.chad.nextGeneration()

        # Print each scene and corresponding cars seen
        print("Light:")
        for scene in self.chad.light:
            print(str(scene[0]) + ", " + str(scene[1]))

        print("\nMedium:")
        for scene in self.chad.medium:
            print(str(scene[0]) + ", " + str(scene[1]))

        print("\nHeavy:")
        for scene in self.chad.heavy:
            print(str(scene[0]) + ", " + str(scene[1]))


app = QtWidgets.QApplication(sys.argv)
Dashboard = QtWidgets.QMainWindow()
ui = Ui_Dashboard()
ui.setupUi(Dashboard)
Dashboard.show()

cv2.destroyAllWindows()

sys.exit(app.exec_())